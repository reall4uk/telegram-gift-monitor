import 'dart:io' show Platform;
import 'dart:typed_data' show Int32List, Int64List;
import 'package:flutter/material.dart' show Color;
import 'package:flutter_local_notifications/flutter_local_notifications.dart';
import 'package:permission_handler/permission_handler.dart';
import 'package:shared_preferences/shared_preferences.dart';

class NotificationService {
  static final NotificationService _instance = NotificationService._internal();
  factory NotificationService() => _instance;
  NotificationService._internal();

  final FlutterLocalNotificationsPlugin _notifications = FlutterLocalNotificationsPlugin();
  bool _isInitialized = false;

  /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  Future<void> initialize() async {
    if (_isInitialized) return;

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Android
    const androidSettings = AndroidInitializationSettings('@mipmap/ic_launcher');
    
    // –û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    const initSettings = InitializationSettings(
      android: androidSettings,
    );

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    await _notifications.initialize(
      initSettings,
      onDidReceiveNotificationResponse: _onNotificationTapped,
    );

    // –ó–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
    await _requestPermissions();
    
    // –°–æ–∑–¥–∞–µ–º –∫–∞–Ω–∞–ª—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    await _createNotificationChannels();
    
    _isInitialized = true;
    print('[NotificationService] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
  }

  /// –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è Android
  Future<void> _createNotificationChannels() async {
    if (Platform.isAndroid) {
      final androidPlugin = _notifications
          .resolvePlatformSpecificImplementation<AndroidFlutterLocalNotificationsPlugin>();
      
      if (androidPlugin != null) {
        // –ö–∞–Ω–∞–ª –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        const defaultChannel = AndroidNotificationChannel(
          'gift_standard',
          '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
          description: '–û–±—ã—á–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –ø–æ–¥–∞—Ä–∫–∞—Ö',
          importance: Importance.defaultImportance,
          enableVibration: true,
          enableLights: true,
          ledColor: Color(0xFF4ECDC4),
          playSound: true,
        );
        
        // –ö–∞–Ω–∞–ª –¥–ª—è –≤–∞–∂–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (—Ä–∏–Ω–≥—Ç–æ–Ω)
        const ringtoneChannel = AndroidNotificationChannel(
          'gift_ringtone',
          '–í–∞–∂–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
          description: '–í–∞–∂–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ä–µ–¥–∫–∏—Ö –ø–æ–¥–∞—Ä–∫–∞—Ö',
          importance: Importance.high,
          enableVibration: true,
          enableLights: true,
          ledColor: Color(0xFFFFA500),
          playSound: true,
        );
        
        // –ö–∞–Ω–∞–ª –¥–ª—è —Å—Ä–æ—á–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–±—É–¥–∏–ª—å–Ω–∏–∫)
        const alarmChannel = AndroidNotificationChannel(
          'gift_alarm',
          '–°—Ä–æ—á–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
          description: '–°—Ä–æ—á–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ª–∏–º–∏—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–∞—Ö',
          importance: Importance.max,
          enableVibration: true,
          enableLights: true,
          ledColor: Color(0xFFFF0000),
          playSound: true,
        );
        
        // –ö–∞–Ω–∞–ª –¥–ª—è —Ñ–æ–Ω–æ–≤–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
        const foregroundChannel = AndroidNotificationChannel(
          'gift_monitor_foreground',
          '–§–æ–Ω–æ–≤—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥',
          description: '–ü–æ—Å—Ç–æ—è–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤ —Ñ–æ–Ω–µ',
          importance: Importance.low,
          enableVibration: false,
          enableLights: false,
          playSound: false,
          showBadge: false,
        );
        
        // –°–æ–∑–¥–∞–µ–º –≤—Å–µ –∫–∞–Ω–∞–ª—ã
        await androidPlugin.createNotificationChannel(defaultChannel);
        await androidPlugin.createNotificationChannel(ringtoneChannel);
        await androidPlugin.createNotificationChannel(alarmChannel);
        await androidPlugin.createNotificationChannel(foregroundChannel);
        
        print('[NotificationService] –°–æ–∑–¥–∞–Ω–æ 4 –∫–∞–Ω–∞–ª–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π');
      }
    }
  }

  /// –ó–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
  Future<void> _requestPermissions() async {
    if (Platform.isAndroid) {
      // Android 13+ —Ç—Ä–µ–±—É–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      if (await Permission.notification.isDenied) {
        await Permission.notification.request();
      }
      
      // –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —Ç–æ—á–Ω—ã—Ö –±—É–¥–∏–ª—å–Ω–∏–∫–æ–≤ (Android 12+)
      if (await Permission.scheduleExactAlarm.isDenied) {
        await Permission.scheduleExactAlarm.request();
      }
    }
  }

  /// –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º –ø–æ–¥–∞—Ä–∫–µ
  Future<void> showGiftNotification({
    required String giftId,
    required String price, // –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ String
    String? title,
    bool isLimited = true,
    String soundType = 'default',
    double volume = 1.0,
  }) async {
    if (!_isInitialized) await initialize();

    try {
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
      final prefs = await SharedPreferences.getInstance();
      final soundEnabled = prefs.getBool('sound_enabled') ?? true;
      final vibrationEnabled = prefs.getBool('vibration_enabled') ?? true;

      // –í—ã–±–∏—Ä–∞–µ–º –∑–≤—É–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
      AndroidNotificationSound? notificationSound;
      
      if (soundEnabled) {
        switch (soundType) {
          case 'alarm':
            // –î–ª—è –±—É–¥–∏–ª—å–Ω–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –≤–∞–∂–Ω–æ—Å—Ç—å
            notificationSound = null; // –°–∏—Å—Ç–µ–º–Ω—ã–π –∑–≤—É–∫
            break;
          case 'ringtone':
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –∑–≤—É–∫
            notificationSound = null;
            break;
          case 'default':
          default:
            // –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∑–≤—É–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
            notificationSound = null; // null = —Å–∏—Å—Ç–µ–º–Ω—ã–π –∑–≤—É–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            break;
        }
      }

      // –û–±—ä—è–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–∞–Ω–∞–ª–∞
      String channelId;
      String channelName;
      Importance importance;
      Priority priority;
      bool useFullScreenIntent = false;
      
      // –í—ã–±–∏—Ä–∞–µ–º –∫–∞–Ω–∞–ª –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –∑–≤—É–∫–∞
      switch (soundType) {
        case 'alarm':
          channelId = 'gift_alarm';
          channelName = '–°—Ä–æ—á–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è';
          importance = Importance.max;
          priority = Priority.max;
          useFullScreenIntent = true;
          break;
        case 'ringtone':
          channelId = 'gift_ringtone';
          channelName = '–í–∞–∂–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è';
          importance = Importance.high;
          priority = Priority.high;
          break;
        default:
          channelId = 'gift_standard';
          channelName = '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è';
          importance = Importance.defaultImportance;
          priority = Priority.defaultPriority;
          break;
      }

      // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Android —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      final androidDetails = AndroidNotificationDetails(
        channelId,
        channelName,
        channelDescription: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –ø–æ–¥–∞—Ä–∫–∞—Ö –≤ Telegram',
        importance: importance,
        priority: priority,
        showWhen: true,
        enableVibration: vibrationEnabled,
        vibrationPattern: vibrationEnabled ? Int64List.fromList([0, 500, 200, 500]) : null,
        enableLights: true,
        ledColor: isLimited ? const Color(0xFFFF6B6B) : const Color(0xFF4ECDC4),
        ledOnMs: 1000,
        ledOffMs: 500,
        playSound: soundEnabled,
        sound: notificationSound,
        styleInformation: BigTextStyleInformation(
          '–¶–µ–Ω–∞: $price ‚≠êÔ∏è\n${isLimited ? "‚ö° –õ–ò–ú–ò–¢–ò–†–û–í–ê–ù–ù–´–ô –ü–û–î–ê–†–û–ö!" : "–ù–æ–≤—ã–π –ø–æ–¥–∞—Ä–æ–∫ –¥–æ—Å—Ç—É–ø–µ–Ω"}',
          contentTitle: title ?? '–ù–æ–≤—ã–π –ø–æ–¥–∞—Ä–æ–∫ –≤ Telegram!',
          summaryText: isLimited ? 'üî• –†–µ–¥–∫–∏–π' : 'üéÅ –û–±—ã—á–Ω—ã–π',
        ),
        ticker: '–ù–æ–≤—ã–π –ø–æ–¥–∞—Ä–æ–∫: $price ‚≠êÔ∏è',
        category: AndroidNotificationCategory.alarm,
        fullScreenIntent: useFullScreenIntent,
        autoCancel: true,
        color: const Color(0xFF4ECDC4),
        icon: '@mipmap/ic_launcher',
        largeIcon: const DrawableResourceAndroidBitmap('@mipmap/ic_launcher'),
        actions: [
          const AndroidNotificationAction(
            'open_gift',
            '–û—Ç–∫—Ä—ã—Ç—å',
            cancelNotification: true,
            showsUserInterface: true,
          ),
        ],
      );

      final details = NotificationDetails(android: androidDetails);

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      await _notifications.show(
        giftId.hashCode,
        title ?? '–ù–æ–≤—ã–π –ø–æ–¥–∞—Ä–æ–∫ –≤ Telegram!',
        '–¶–µ–Ω–∞: $price ‚≠êÔ∏è ‚Ä¢ ${isLimited ? "–õ–∏–º–∏—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π!" : "–î–æ—Å—Ç—É–ø–µ–Ω"}',
        details,
        payload: giftId,
      );

      print('[NotificationService] –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞–Ω–æ: $giftId, –∑–≤—É–∫: $soundType');
    } catch (e) {
      print('[NotificationService] –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: $e');
    }
  }

  /// –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  Future<void> showTestNotification({
    String soundType = 'default',
    double volume = 1.0,
  }) async {
    await showGiftNotification(
      giftId: 'test_${DateTime.now().millisecondsSinceEpoch}',
      price: '9999',
      title: 'üéâ –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ',
      isLimited: true,
      soundType: soundType,
      volume: volume,
    );
  }

  /// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  void _onNotificationTapped(NotificationResponse response) {
    print('[NotificationService] –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞–∂–∞—Ç–æ: ${response.payload}');
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞–≤–∏–≥–∞—Ü–∏—é –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –ø–æ–¥–∞—Ä–∫—É
  }

  /// –û—Ç–º–µ–Ω–∞ –≤—Å–µ—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  Future<void> cancelAll() async {
    await _notifications.cancelAll();
  }

  /// –û—Ç–º–µ–Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  Future<void> cancel(int id) async {
    await _notifications.cancel(id);
  }

  /// –ó–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  Future<bool> requestPermission() async {
    if (Platform.isAndroid) {
      final status = await Permission.notification.request();
      return status.isGranted;
    }
    return true;
  }

  /// –û—Ç–∫–ª—é—á–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  Future<void> disableNotifications() async {
    final prefs = await SharedPreferences.getInstance();
    await prefs.setBool('notifications_enabled', false);
    await cancelAll();
  }

  /// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  Future<void> saveNotificationSettings({
    required bool soundEnabled,
    required bool vibrationEnabled,
    required String soundType,
    required double volume,
  }) async {
    final prefs = await SharedPreferences.getInstance();
    await prefs.setBool('sound_enabled', soundEnabled);
    await prefs.setBool('vibration_enabled', vibrationEnabled);
    await prefs.setString('notification_sound', soundType);
    await prefs.setDouble('notification_volume', volume);
    
    print('[NotificationService] –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: –∑–≤—É–∫=$soundType, –≥—Ä–æ–º–∫–æ—Å—Ç—å=$volume');
  }
}